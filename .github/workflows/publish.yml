name: Publish nuget packgae
run-name: ${{ github.actor }} is publishing DirectShow .Net package to NuGet
on: [push]

jobs:
  Publish-NuGet-Package:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup NuGet.exe for use with actions
      # You may pin to the exact commit or the version.
      # uses: NuGet/setup-nuget@fd9fffd6ca4541cf4152a9565835ca1a88a6eb37
      uses: NuGet/setup-nuget@v1.1.1
      with:
        # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
        nuget-version: 'latest' # optional, default is latest
        # NuGet API Key to configure.
        # nuget-api-key: # optional
        # Source to scope the NuGet API Key to.
        # nuget-api-key-source: # optional
    - run: nuget pack DirectShowNet.nuspec
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        path: DirectShowNet*.nupkg
        if-no-files-found: error
    - name: Publish NuGet package
      run: |
        nuget setApiKey "${{ secrets.NUGET_APIKEY }}"
        foreach($file in (Get-ChildItem "$ActivityLogDirectory" -Filter *.nupkg)) {
            nuget push $file -Source https://api.nuget.org/v3/index.json
            # WRITE-HOST $file
        }
